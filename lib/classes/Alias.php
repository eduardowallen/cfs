<?php

define('MAIL_ALIASES', '/etc/aliases');
define('AUTOGENERATED', '#!AUTOGENERATED -- Do not edit below this line!!');

class Alias {
	private static $aliases = array();

	/**
	 * Skriver över aliases-filen med innehållet i self::@aliases
	 * @return void
	 */
    private static function write() {
        if(!is_writeable(MAIL_ALIASES)) {
            throw new Exception('Kan inte skriva till alias-filen, kontrollera rättigheterna!');
        }

		$content = file_get_contents(MAIL_ALIASES);

		if(false !== ($autogenerated_pos = strpos($content, AUTOGENERATED))) {
			$content = substr($content, 0, $autogenerated_pos -1);
		}

		$content .= PHP_EOL . AUTOGENERATED . PHP_EOL;

		foreach(self::$aliases as $alias) {
			$content .= $alias . PHP_EOL;
		}

        file_put_contents(MAIL_ALIASES, $content, LOCK_EX);
    }

	/**
	 * Lägger till epost-mottagare till ett epost-alias
	 * @param string $alias			Epost-alias
	 * @param array  $recipients	Epost-mottagare
	 */
    public static function add($alias, array $recipients) {
        if(!strlen($alias) || empty($recipients))
            return;

        if(false !== strpos($alias, '@'))
            throw new Exception('Alias kan endast vara lokala epost-konton!');

        foreach($recipients as $ix => $recipient) {
            if(!strlen($recipient))
                unset($recipients[$ix]);
        }

		if(empty($recipients))
			return;

		self::$aliases[] = sprintf(
			"%s: %s",
			$alias,
			join(' ', $recipients)
		);
    }

	/**
	 * Anropar Alias::write() och laddar om newaliases
	 * @return bool
	 */
    public static function commit() {
		self::write();

        system("sudo newaliases", $ret);

		return $ret == 0;
    }
}

?>
